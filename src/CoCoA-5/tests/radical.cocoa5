TestCount := 0;

define TEST_ASSERT(A,B)
  toplevel TestCount;
  toplevel PrintInfo;
  TestCount := TestCount+1;
  if A<>B then
    error("TEST: " + Sprint(A) + " <> " + Sprint(B));
  endif;
--  if PrintInfo then print "."; EndIf;
enddefine; -- TEST_ASSERT

T0 := CpuTime();

----------------------------------------------------------------------
-- 0-dim (test for MinPolyModular -- ugly prime)
K := QQ;
P ::= K[X0,X1,X2,X3];
use P;
J := ideal(X2^3 +X0*X1*X3 +X3^3,
	   -3*X0*X2*X3 +X2^2*X3,
	   7*X0 +3*X1 +X2 -9*X3,
	   -X0 +6*X1 +3*X2 +3*X3);
TEST_ASSERT(IsRadical(J), false);

----------------------------------------------------------------------
-- 0-dim
K := NewRingFp(32009);
P ::= K[x,y,z,t];
Use P;
G1:= x^4 +83*z^3 +73*y^2 -t^2 -437*t;
G2:= y^3-z-t;
G3:= z^3 +x -t;
G4:= t^4-12*z^2 +77*y^2 +15*x;
J := ideal(G1, G2, G3, G4);
TEST_ASSERT(radical(J),
ideal(x^4 +83*z^3 +73*y^2 -t^2 -437*t, y^3 -z -t, z^3 +x -t, t^4
+77*y^2 -12*z^2 +15*x, -10285*x^3*y^2*z^2*t^3 -10588*y^2*z^2*t^3
-4616*x^3*y^2*z +8280*x^3*y*z^2 +5770*y^2*z^2*t +8280*x^3*y
-5996*y^2*z^2 +4616*y^2*z*t +14598*y*t^3 +625*y^2*z +11865*y*z^2
+15131*y*z -8280*y*t -6436*y) );

----------------------------------------------------------------------
-- 0-dim
K := QQ;
P ::= K[x,y,z,t];
Use P;
G1:= x^4 +z^3 +7*y^2 -t^2 -t;
G2:= y^2-z-t;
G3:= z^3 +x -t;
G4:= t^4-z^2 +7*y^2 +5*x;
I := ideal(G1, G2, G3, G4);
TEST_ASSERT(radical(I),
ideal(x^4 +z^3 +7*y^2 -t^2 -t, y^2 -z -t, z^3 +x -t, t^4 +7*y^2 -z^2 +5*x, y^95 +84*y^89 -40*y^87 +1120*y^85 +3134*y^83 -1568*y^81 +66476*y^79 +35536*y^77 +467364*y^75 +1606898*y^73 +561990*y^71 +18467540*y^69 +14503005*y^67 +111091402*y^65 +206948770*y^63 +293377268*y^61 +1918745292*y^59 -28041834*y^57 +11041181584*y^55 +1507962466*y^53 +4688746692*y^51 +30057044280*y^49 -167580269004*y^47 +119075121976*y^45 +131544124970*y^43 -963604231126*y^41 +2057683769972*y^39 -4632287775692*y^37 +1877451951135*y^35 +7550339189674*y^33 -11474546292436*y^31 -5873117124070*y^29 +18161071388158*y^27 +3979099710438*y^25 -11929682790300*y^23 +6871333984302*y^21 +3802302583436*y^19 -591349244724*y^17 +14292885694163*y^15 +22114120389226*y^13 +17623364838539*y^11 +10722892664040*y^9 +4737030580459*y^7 +1261541428362*y^5 +168695764585*y^3 +8874105198*y)
	    );

----------------------------------------------------------------------
use R ::= QQ[X0,X1,X2,X3,X4,X5,X6]; // redmine/issues/1062
I := ideal(X3^3 +X0*X3*X4 +X4^3,
  X0*X1*X3 +X3*X5^2,
  -X0^6*X1*X3 +X3*X6^7,
  X0 -X1 -X2 -X3 -X5 -X6,
  -X2 +X5 +X6,
  -X0 -X5 -X6,
  X1 -X2 +X3 -X6,
  X1 -X2 +X3 -X5);
TEST_ASSERT(radical(I), ideal(X3^3 +X0*X3*X4 +X4^3,  X0*X1*X3 +X3*X5^2,  -X0^6*X1*X3 +X3*X6^7,  X0 -X1 -X2 -X3 -X5 -X6,  -X2 +X5 +X6,  -X0 -X5 -X6,  X1 -X2 +X3 -X6,  X1 -X2 +X3 -X5));

----------------------------------------------------------------------
M:=3;  use R::=QQ[x[1..M,1..M]], DegLex;
J := ideal(
	      x[2,3]*x[3,1] ,
	      x[1,2]*x[1,3] - x[1,3]*x[1,3],
	      x[1,1]*x[3,3] ,
	      x[2,3]*x[1,2] - x[2,1]*x[1,3]
	   );
TEST_ASSERT(radical(J),
ideal(x[2,3]*x[3,1], x[1,3]*x[2,1] -x[1,3]*x[2,3],
      x[1,2]*x[2,3] -x[1,3]*x[2,3], x[1,2]*x[1,3] -x[1,3]^2, x[1,1]*x[3,3]));

----------------------------------------------------------------------
use R::=QQ[b,c,d,e], DegLex;
J := ideal([d*e, b*e -c*d, b*c -c^2, -b^2 +b*c]);
TEST_ASSERT(radical(J), ideal(b -c, c*e, c*d, d*e));

----------------------------------------------------------------------
M:=6;  use R::=QQ[x[1..M,1..M]], DegLex;
-- commented out because a bit too long for automatic use
J := ideal(
	   x[2,4]*x[3,6] - x[2,6]*x[3,4],
	   x[1,3]*x[2,4] - x[1,4]*x[2,3],
	   x[1,2]*x[4,3] - x[1,3]*x[4,2],
	   x[1,2]*x[5,4] - x[1,4]*x[5,2],
	   x[2,4]*x[5,5] - x[2,5]*x[5,4],
	   x[1,1]*x[3,4] - x[1,4]*x[3,1],
	   x[2,3]*x[6,5] - x[2,5]*x[6,3]);

RadJ := ideal(x[2,4]*x[5,5] -x[2,5]*x[5,4],
  x[2,4]*x[3,6] -x[2,6]*x[3,4],  x[2,3]*x[6,5] -x[2,5]*x[6,3],
  x[1,3]*x[2,4] -x[1,4]*x[2,3],  x[1,2]*x[5,4] -x[1,4]*x[5,2],
  x[1,2]*x[4,3] -x[1,3]*x[4,2],  x[1,1]*x[3,4] -x[1,4]*x[3,1],
  x[2,5]*x[3,6]*x[5,4] -x[2,6]*x[3,4]*x[5,5],
  x[1,3]*x[2,5]*x[5,4] -x[1,4]*x[2,3]*x[5,5],
  x[1,3]*x[2,6]*x[3,4] -x[1,4]*x[2,3]*x[3,6],
  x[1,3]*x[4,2]*x[5,4] -x[1,4]*x[4,3]*x[5,2],
  x[1,4]*x[2,3]*x[4,2]*x[5,5] -x[1,4]*x[2,5]*x[4,3]*x[5,2],
  x[1,4]*x[2,3]*x[4,2]*x[5,4] -x[1,4]*x[2,4]*x[4,3]*x[5,2],
  x[1,2]*x[2,6]*x[3,4]*x[5,5] -x[1,4]*x[2,5]*x[3,6]*x[5,2],
  x[1,2]*x[1,4]*x[2,3]*x[5,5] -x[1,3]*x[1,4]*x[2,5]*x[5,2],
  x[1,1]*x[1,4]*x[2,3]*x[3,6] -x[1,3]*x[1,4]*x[2,6]*x[3,1],
  x[1,4]*x[2,5]*x[4,2]*x[5,5]*x[6,3] -x[1,4]*x[2,5]*x[4,3]*x[5,2]*x[6,5],
  x[1,4]*x[2,4]*x[4,3]*x[5,2]*x[6,5] -x[1,4]*x[2,5]*x[4,2]*x[5,4]*x[6,3],
  x[1,2]*x[1,4]*x[2,5]*x[5,5]*x[6,3] -x[1,3]*x[1,4]*x[2,5]*x[5,2]*x[6,5],
  x[1,1]*x[1,4]*x[2,5]*x[3,6]*x[6,3] -x[1,3]*x[1,4]*x[2,6]*x[3,1]*x[6,5],
  x[1,1]*x[1,4]*x[2,5]*x[3,6]*x[5,2] -x[1,2]*x[1,4]*x[2,6]*x[3,1]*x[5,5],
  x[1,4]*x[2,6]*x[3,4]*x[4,2]*x[5,5]*x[6,3] -x[1,4]*x[2,6]*x[3,4]*x[4,3]*x[5,2]*x[6,5],
  x[1,3]*x[1,4]*x[2,6]*x[3,1]*x[5,4]*x[6,5] -x[1,4]^2*x[2,6]*x[3,1]*x[5,5]*x[6,3],
  x[1,2]*x[1,4]*x[2,6]*x[3,1]*x[5,5]*x[6,3] -x[1,3]*x[1,4]*x[2,6]*x[3,1]*x[5,2]*x[6,5],
  x[1,4]*x[2,6]*x[3,1]*x[4,2]*x[5,5]*x[6,3] -x[1,4]*x[2,6]*x[3,1]*x[4,3]*x[5,2]*x[6,5]);

-- commented out because a bit too long for automatic use
-- Radical(J) = RadJ;  Radical(RadJ) = RadJ;

----------------------------------------------------------------------
use P ::= QQ[x[1..4]];

I:=ideal(12*x[3]*x[4]*x[1]*x[2] - 15*x[4]^2*x[2]^2 + x[3]^2*x[1] +
	 8*x[3]*x[4]*x[1] - 2*x[3]*x[4]*x[2] - 4*x[4]^2*x[2],
	 3*x[3]^2*x[1]^2 - 3*x[4]^2*x[2]^2 + x[3]^2*x[1] +
	 2*x[3]*x[4]*x[1] - 2*x[3]*x[4]*x[2] - x[4]^2*x[2],
	 108*x[4]^3*x[2]^3 - 9*x[3]*x[4]^2*x[2]^2 - 72*x[4]^3*x[2]^2 -
	 x[3]^3*x[1] + 64*x[3]*x[4]^2*x[1] + 2*x[3]^2*x[4]*x[2] -
	 60*x[3]*x[4]^2*x[2] -32*x[4]^3*x[2]);

RadJ :=
ideal(x[1]*x[2]^2*x[4] - (8/9)*x[1]^2*x[3] + (2/9)*x[1]*x[2]*x[3]
	 + (4/9)*x[1]*x[2]*x[4] - ( 4/9)*x[2]^2*x[4] -(2/9)*x[1]*x[3] - (1/9)*x[2]*x[4],
  x[1]^2*x[2]*x[3] - (4/9)*x[1]^2*x[3] +
(4/9)*x[1]*x[2]*x[3] + (2/9)*x[1]*x[2]*x[4] - (8/9)*x[2]^2*x[4] -
(1/9)*x[1]*x[3] - (2/9)*x[2]*x[4],
  x[1]*x[2]*x[3]*x[4] - (5/4)*x[2]^2*x[4]^2 +
(1/12)*x[1]*x[3]^2 + (2/3)*x[1]*x[3]*x[4] - ( 1/6)*x[2]*x[3]*x[4] -
(1/3)*x[2]*x[4]^2,
  x[1]^2*x[3]^2 - x[2]^2*x[4]^2 + (1/3)*x[1]*x[3]^2 +
(2/3)*x[1]*x[3]*x[4] - (2/3)*x[2]*x[3]*x[4] - (1/3)*x[2]*x[4]^2,
  x[2]^3*x[4]^2
+ (1/9)*x[1]*x[2]*x[3]^2 - (2/9)*x[2]^2*x[3]*x[4] - (2/3)*x[2]^2*x[4]^2 +
(2/27)*x[1]*x[3]^2 + (16/27)*x[1]*x[3]*x[4] - (16/27)*x[2]*x[3]*x[4] -
(8/27)*x[2]*x[4]^2);

TEST_ASSERT(radical(I), RadJ);
TEST_ASSERT(radical(RadJ), RadJ);

----------------------------------------------------------------------
--  TEST 02 :
--  Test := Record[Id := "radical_02", Descr := "T2Test"];
use ZZ/(32003)[x[1..4]];
I:=
ideal(
x[2]^4 + x[1]^3*x[3] -  2*x[1]*x[3]^3 + x[1]^2 + x[2]*x[3],
-  x[1]^2*x[2]^2 -  x[2]^3*x[3] -  3*x[2]*x[3]^3 -  x[3]^3,
x[2]^4 -  2*x[1]*x[2]*x[3]^2 -  x[1]^2*x[3] + 2*x[2]^2*x[3]);

RadJ := 
ideal(x[2]^4 + x[1]^3*x[3] - 2*x[1]*x[3]^3 + x[1]^2 + x[2]*x[3],
  -x[1]^2*x[2]^2 - x[2]^3*x[3] - 3*x[2]*x[3]^3 - x[3]^3,
  x[2]^4 -2*x[1]*x[2]*x[3]^2 - x[1]^2*x[3] + 2*x[2]^2*x[3],
  x[2]^30 -993*x[2]^29 + 7940*x[2]^28 + 12659*x[2]^27 + 8774*x[2]^26 -
500*x[2]^25 + 1266*x[2]^24 - 3594*x[2]^23 - 6212*x[2]^22 -
8032*x[2]^21 + 737*x[2]^20 + 12167*x[2]^19 + 14825*x[2]^18 +
4633*x[2]^17 - 13782*x[2]^16 + 3147*x[2]^15 + 10094*x[2]^14 +
14552*x[2]^13 - 12563*x[2]^12 - 1781*x[2]^11 - 12780*x[2]^10 +
2139*x[2]^9 - 2766*x[2]^8 - 13986*x[2]^7 - 487*x[2]^6 - 5195*x[2]^5 +
394*x[2]^4 + 2096*x[2]^3 - 842*x[2]^2 - 6203*x[2],
  x[1]^30 -6031*x[1]^29 - 9808*x[1]^28 + 15432*x[1]^27 + 8298*x[1]^26 +
10183*x[1]^25 - 12754*x[1]^24 + 9516*x[1]^23 - 1465*x[1]^22 -
2153*x[1]^21 + 2078*x[1]^20 - 91*x[1]^19 + 1238*x[1]^18 + 382*x[1]^17
+ 5152*x[1]^16 - 4819*x[1]^15 - 10180*x[1]^14 + 15246*x[1]^13 +
12691*x[1]^12 - 1049*x[1]^11 - 8004*x[1]^10 + 14757*x[1]^9 +
1966*x[1]^8 + 8621*x[1]^7 - 8666*x[1]^6 - 14313*x[1]^5 - 11811*x[1]^4
+ 10360*x[1]^3 - 14808*x[1]^2 + 6253*x[1],
  x[3]^30 +  2716*x[3]^29 -
13509*x[3]^28 + 12004*x[3]^27 - 5997*x[3]^26 - 14078*x[3]^25 +
12648*x[3]^24 - 3187*x[3]^23 + 3848*x[3]^22 - 6570*x[3]^21 +
11902*x[3]^20 + 9205*x[3]^19 + 4796*x[3]^18 - 9673*x[3]^17 +
12422*x[3]^16 + 14867*x[3]^15 + 654*x[3]^14 + 15820*x[3]^13 +
8496*x[3]^12 + 12980*x[3]^11 + 5476*x[3]^10 + 4205*x[3]^9 -
15956*x[3]^8 - 10724*x[3]^7 - 2919*x[3]^6 - 4935*x[3]^5 + 9924*x[3]^4
- 14554*x[3]^3 + 12653*x[3]^2 - 10420*x[3]);

TEST_ASSERT($radical.RadicalOfUnmixed(I), RadJ);
TEST_ASSERT(radical(I), RadJ);
TEST_ASSERT(radical(RadJ), RadJ);

println "Radical: done!";

